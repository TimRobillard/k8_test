options:
  env:
    - KUBECONFIG=/tmp/kubeconfig
  machineType: E2_HIGHCPU_8

timeout: 1200s
tags: ['k8-test', '$TAG_NAME', '$SHORT_SHA']

substitutions:
  _APP_NAME: k8-test
  _TAG: '${BRANCH_NAME}-${SHORT_SHA}'
  _MLS_TYPE: TEST
  _MLS_TYPES: ""

steps:
  - id: build-image
    name: gcr.io/kaniko-project/executor
    args:
      - --destination=gcr.io/$PROJECT_ID/$_APP_NAME:$_TAG
      - --cache=true
  - id: deploy-services
    name: gcr.io/$PROJECT_ID/helm
    entrypoint: bash
    args:
      - -c
      - |
        _PORT=8080
        while IFS= read -r mlsType; do
        _MLS_TYPES=$_MLS_TYPES,$mlsType
        gcloud builds submit \
        --config=cloudbuild-deploy.yaml \
        --substitutions=_MLS_TYPE=$mlsType,\
        _TAG=${_TAG},_GKE_CLUSTER=${_GKE_CLUSTER},\
        _GKE_REGION=${_GKE_REGION}, \
        _PORT="${_PORT}"
        (( _PORT++ ))
        done < ./gcp/mlsTypes.txt
    waitFor: [build-image]
  - id: helm-ingress
    name: gcr.io/$PROJECT_ID/helm
    entrypoint: bash
    args:
      - -c
      - |
        while IFS= read -r mlsType; do
        _MLS_TYPES=$_MLS_TYPES,$mlsType
        done < ./gcp/mlsTypes.txt
        helm template ./gcp/ingress \
        --set=mlsTypes={${_MLS_TYPES:1}} \
        --output-dir=./helm-output-ingress || { exit 1; }
    waitFor: [deploy-services]

  - id: deploy-ingress
    name: gcr.io/cloud-builders/gke-deploy
    args:
      - run
      - --filename=./helm-output-ingress/k8-test/templates
      - --cluster=${_GKE_CLUSTER}
      - --location=${_GKE_REGION}
      - --namespace=${_NAMESPACE}
      - --output=gke-output/test-ingress
      - --timeout=10m0s
    waitFor: [helm-ingress]
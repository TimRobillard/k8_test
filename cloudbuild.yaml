options:
  env:
    - KUBECONFIG=/tmp/kubeconfig
  machineType: E2_HIGHCPU_8

timeout: 1200s
tags: ['k8-test', '$TAG_NAME', '$SHORT_SHA']

substitutions:
  _APP_NAME: k8-test
  _TAG: '${BRANCH_NAME}-${SHORT_SHA}'
  _MLS_TYPE: TEST
  _MLS_TYPES: ""
  _PORT: '8080'

steps:
  - id: build-image
    name: gcr.io/kaniko-project/executor
    args:
      - --destination=gcr.io/$PROJECT_ID/$_APP_NAME:$_TAG
      - --cache=true
  - id: helm-template
    name: gcr.io/$PROJECT_ID/helm
    entrypoint: bash
    args: 
    - -c
    - |
      helm template ./gcp/helm --set=imageTag=$_TAG --set=mlsType=TEST --output-dir=./helm-output-test || { exit 1; }
      helm template ./gcp/helm --set=imageTag=$_TAG --set=mlsType=AAR --output-dir=./helm-output-aar || { exit 1; }
    waitFor: [build-image]
  - id: deploy-test
    name: gcr.io/cloud-builders/gke-deploy
    args:
      - run
      - --filename=./helm-output-test/k8-test/templates
      - --cluster=${_GKE_CLUSTER}
      - --location=${_GKE_REGION}
      - --output=gke-output/test
      - --timeout=10m0s
    waitFor: [helm-template]
  - id: deploy-aar
    name: gcr.io/cloud-builders/gke-deploy
    args:
      - run
      - --filename=./helm-output-aar/k8-test/templates
      - --cluster=${_GKE_CLUSTER}
      - --location=${_GKE_REGION}
      - --output=gke-output/aar
      - --timeout=10m0s
    waitFor: [helm-template]
  - id: deploy-ingress
    name: gcr.io/cloud-builders/gke-deploy
    args:
      - run
      - --filename=./gcp/ingress
      - --cluster=${_GKE_CLUSTER}
      - --location=${_GKE_REGION}
      - --namespace=${_NAMESPACE}
      - --output=gke-output/test-ingress
      - --timeout=10m0s
    waitFor: [deploy-aar]